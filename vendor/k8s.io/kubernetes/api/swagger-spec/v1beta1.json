{
  "swaggerVersion": "1.2",
  "apiVersion": "extensions/v1beta1",
  "basePath": "https://10.10.10.10:6443",
  "resourcePath": "/apis/extensions/v1beta1",
  "apis": [
   {
    "path": "/apis/extensions/v1beta1/namespaces/{namespace}/horizontalpodautoscalers",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.HorizontalPodAutoscalerList",
      "method": "GET",
      "summary": "list or watch objects of kind HorizontalPodAutoscaler",
      "nickname": "listNamespacedHorizontalPodAutoscaler",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.HorizontalPodAutoscalerList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.HorizontalPodAutoscaler",
      "method": "POST",
      "summary": "create a HorizontalPodAutoscaler",
      "nickname": "createNamespacedHorizontalPodAutoscaler",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.HorizontalPodAutoscaler",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.HorizontalPodAutoscaler"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/watch/namespaces/{namespace}/horizontalpodautoscalers",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of HorizontalPodAutoscaler",
      "nickname": "watchNamespacedHorizontalPodAutoscalerList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.HorizontalPodAutoscaler",
      "method": "GET",
      "summary": "read the specified HorizontalPodAutoscaler",
      "nickname": "readNamespacedHorizontalPodAutoscaler",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the HorizontalPodAutoscaler",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.HorizontalPodAutoscaler"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.HorizontalPodAutoscaler",
      "method": "PUT",
      "summary": "replace the specified HorizontalPodAutoscaler",
      "nickname": "replaceNamespacedHorizontalPodAutoscaler",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.HorizontalPodAutoscaler",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the HorizontalPodAutoscaler",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.HorizontalPodAutoscaler"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.HorizontalPodAutoscaler",
      "method": "PATCH",
      "summary": "partially update the specified HorizontalPodAutoscaler",
      "nickname": "patchNamespacedHorizontalPodAutoscaler",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "unversioned.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the HorizontalPodAutoscaler",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.HorizontalPodAutoscaler"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "unversioned.Status",
      "method": "DELETE",
      "summary": "delete a HorizontalPodAutoscaler",
      "nickname": "deleteNamespacedHorizontalPodAutoscaler",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the HorizontalPodAutoscaler",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "unversioned.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind HorizontalPodAutoscaler",
      "nickname": "watchNamespacedHorizontalPodAutoscaler",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the HorizontalPodAutoscaler",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/horizontalpodautoscalers",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.HorizontalPodAutoscalerList",
      "method": "GET",
      "summary": "list or watch objects of kind HorizontalPodAutoscaler",
      "nickname": "listHorizontalPodAutoscaler",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.HorizontalPodAutoscalerList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/watch/horizontalpodautoscalers",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of HorizontalPodAutoscaler",
      "nickname": "watchHorizontalPodAutoscalerList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.HorizontalPodAutoscaler",
      "method": "PUT",
      "summary": "replace status of the specified HorizontalPodAutoscaler",
      "nickname": "replaceNamespacedHorizontalPodAutoscalerStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.HorizontalPodAutoscaler",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the HorizontalPodAutoscaler",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.HorizontalPodAutoscaler"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.IngressList",
      "method": "GET",
      "summary": "list or watch objects of kind Ingress",
      "nickname": "listNamespacedIngress",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.IngressList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.Ingress",
      "method": "POST",
      "summary": "create a Ingress",
      "nickname": "createNamespacedIngress",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.Ingress",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Ingress"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/watch/namespaces/{namespace}/ingresses",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Ingress",
      "nickname": "watchNamespacedIngressList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.Ingress",
      "method": "GET",
      "summary": "read the specified Ingress",
      "nickname": "readNamespacedIngress",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Ingress",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Ingress"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.Ingress",
      "method": "PUT",
      "summary": "replace the specified Ingress",
      "nickname": "replaceNamespacedIngress",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.Ingress",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Ingress",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Ingress"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.Ingress",
      "method": "PATCH",
      "summary": "partially update the specified Ingress",
      "nickname": "patchNamespacedIngress",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "unversioned.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Ingress",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Ingress"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "unversioned.Status",
      "method": "DELETE",
      "summary": "delete a Ingress",
      "nickname": "deleteNamespacedIngress",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Ingress",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "unversioned.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/watch/namespaces/{namespace}/ingresses/{name}",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind Ingress",
      "nickname": "watchNamespacedIngress",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Ingress",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/ingresses",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.IngressList",
      "method": "GET",
      "summary": "list or watch objects of kind Ingress",
      "nickname": "listIngress",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.IngressList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/watch/ingresses",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Ingress",
      "nickname": "watchIngressList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.Ingress",
      "method": "PUT",
      "summary": "replace status of the specified Ingress",
      "nickname": "replaceNamespacedIngressStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.Ingress",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Ingress",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Ingress"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/namespaces/{namespace}/jobs",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.JobList",
      "method": "GET",
      "summary": "list or watch objects of kind Job",
      "nickname": "listNamespacedJob",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.JobList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.Job",
      "method": "POST",
      "summary": "create a Job",
      "nickname": "createNamespacedJob",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.Job",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Job"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/watch/namespaces/{namespace}/jobs",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Job",
      "nickname": "watchNamespacedJobList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/namespaces/{namespace}/jobs/{name}",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.Job",
      "method": "GET",
      "summary": "read the specified Job",
      "nickname": "readNamespacedJob",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Job",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Job"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.Job",
      "method": "PUT",
      "summary": "replace the specified Job",
      "nickname": "replaceNamespacedJob",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.Job",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Job",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Job"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.Job",
      "method": "PATCH",
      "summary": "partially update the specified Job",
      "nickname": "patchNamespacedJob",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "unversioned.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Job",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Job"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "unversioned.Status",
      "method": "DELETE",
      "summary": "delete a Job",
      "nickname": "deleteNamespacedJob",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Job",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "unversioned.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/watch/namespaces/{namespace}/jobs/{name}",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind Job",
      "nickname": "watchNamespacedJob",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Job",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/jobs",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.JobList",
      "method": "GET",
      "summary": "list or watch objects of kind Job",
      "nickname": "listJob",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.JobList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/watch/jobs",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Job",
      "nickname": "watchJobList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/namespaces/{namespace}/jobs/{name}/status",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.Job",
      "method": "PUT",
      "summary": "replace status of the specified Job",
      "nickname": "replaceNamespacedJobStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.Job",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Job",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Job"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "v1beta1.Scale",
      "method": "GET",
      "summary": "read scale of the specified Scale",
      "nickname": "readNamespacedScaleScale",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Scale",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Scale"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.Scale",
      "method": "PUT",
      "summary": "replace scale of the specified Scale",
      "nickname": "replaceNamespacedScaleScale",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.Scale",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Scale",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Scale"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.Scale",
      "method": "PATCH",
      "summary": "partially update scale of the specified Scale",
      "nickname": "patchNamespacedScaleScale",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "unversioned.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Scale",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.Scale"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     }
    ]
   },
   {
    "path": "/apis/extensions/v1beta1",
    "description": "API at /apis/extensions/v1beta1",
    "operations": [
     {
      "type": "void",
      "method": "GET",
      "summary": "get available resources",
      "nickname": "getAPIResources",
      "parameters": [],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json"
      ]
     }
    ]
   }
  ],
  "models": {
   "v1beta1.HorizontalPodAutoscalerList": {
    "id": "v1beta1.HorizontalPodAutoscalerList",
    "description": "list of horizontal pod autoscaler objects.",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "unversioned.ListMeta",
      "description": "Standard list metadata."
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1beta1.HorizontalPodAutoscaler"
      },
      "description": "list of horizontal pod autoscaler objects."
     }
    }
   },
   "unversioned.ListMeta": {
    "id": "unversioned.ListMeta",
    "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
    "properties": {
     "selfLink": {
      "type": "string",
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
     },
     "resourceVersion": {
      "type": "string",
      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#concurrency-control-and-consistency"
     }
    }
   },
   "v1beta1.HorizontalPodAutoscaler": {
    "id": "v1beta1.HorizontalPodAutoscaler",
    "description": "configuration of a horizontal pod autoscaler.",
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta",
      "description": "Standard object metadata. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#metadata"
     },
     "spec": {
      "$ref": "v1beta1.HorizontalPodAutoscalerSpec",
      "description": "behaviour of autoscaler. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#spec-and-status."
     },
     "status": {
      "$ref": "v1beta1.HorizontalPodAutoscalerStatus",
      "description": "current information about the autoscaler."
     }
    }
   },
   "v1.ObjectMeta": {
    "id": "v1.ObjectMeta",
    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
    "properties": {
     "name": {
      "type": "string",
      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://releases.k8s.io/release-1.1/docs/user-guide/identifiers.md#names"
     },
     "generateName": {
      "type": "string",
      "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#idempotency"
     },
     "namespace": {
      "type": "string",
      "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://releases.k8s.io/release-1.1/docs/user-guide/namespaces.md"
     },
     "selfLink": {
      "type": "string",
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
     },
     "uid": {
      "type": "string",
      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://releases.k8s.io/release-1.1/docs/user-guide/identifiers.md#uids"
     },
     "resourceVersion": {
      "type": "string",
      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#concurrency-control-and-consistency"
     },
     "generation": {
      "type": "integer",
      "format": "int64",
      "description": "A sequence number representing a specific generation of the desired state. Currently only implemented by replication controllers. Populated by the system. Read-only."
     },
     "creationTimestamp": {
      "type": "string",
      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#metadata"
     },
     "deletionTimestamp": {
      "type": "string",
      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource will be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. Once the resource is deleted in the API, the Kubelet will send a hard termination signal to the container. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#metadata"
     },
     "deletionGracePeriodSeconds": {
      "type": "integer",
      "format": "int64",
      "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
     },
     "labels": {
      "type": "any",
      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://releases.k8s.io/release-1.1/docs/user-guide/labels.md"
     },
     "annotations": {
      "type": "any",
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://releases.k8s.io/release-1.1/docs/user-guide/annotations.md"
     }
    }
   },
   "v1beta1.HorizontalPodAutoscalerSpec": {
    "id": "v1beta1.HorizontalPodAutoscalerSpec",
    "description": "specification of a horizontal pod autoscaler.",
    "required": [
     "scaleRef",
     "maxReplicas"
    ],
    "properties": {
     "scaleRef": {
      "$ref": "v1beta1.SubresourceReference",
      "description": "reference to Scale subresource; horizontal pod autoscaler will learn the current resource consumption from its status, and will set the desired number of pods by modifying its spec."
     },
     "minReplicas": {
      "type": "integer",
      "format": "int32",
      "description": "lower limit for the number of pods that can be set by the autoscaler, default 1."
     },
     "maxReplicas": {
      "type": "integer",
      "format": "int32",
      "description": "upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas."
     },
     "cpuUtilization": {
      "$ref": "v1beta1.CPUTargetUtilization",
      "description": "target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified it defaults to the target CPU utilization at 80% of the requested resources."
     }
    }
   },
   "v1beta1.SubresourceReference": {
    "id": "v1beta1.SubresourceReference",
    "description": "SubresourceReference contains enough information to let you inspect or modify the referred subresource.",
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind of the referent; More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds\""
     },
     "name": {
      "type": "string",
      "description": "Name of the referent; More info: http://releases.k8s.io/release-1.1/docs/user-guide/identifiers.md#names"
     },
     "apiVersion": {
      "type": "string",
      "description": "API version of the referent"
     },
     "subresource": {
      "type": "string",
      "description": "Subresource name of the referent"
     }
    }
   },
   "v1beta1.CPUTargetUtilization": {
    "id": "v1beta1.CPUTargetUtilization",
    "required": [
     "targetPercentage"
    ],
    "properties": {
     "targetPercentage": {
      "type": "integer",
      "format": "int32",
      "description": "fraction of the requested CPU that should be utilized/used, e.g. 70 means that 70% of the requested CPU should be in use."
     }
    }
   },
   "v1beta1.HorizontalPodAutoscalerStatus": {
    "id": "v1beta1.HorizontalPodAutoscalerStatus",
    "description": "current status of a horizontal pod autoscaler",
    "required": [
     "currentReplicas",
     "desiredReplicas"
    ],
    "properties": {
     "observedGeneration": {
      "type": "integer",
      "format": "int64",
      "description": "most recent generation observed by this autoscaler."
     },
     "lastScaleTime": {
      "type": "string",
      "description": "last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed."
     },
     "currentReplicas": {
      "type": "integer",
      "format": "int32",
      "description": "current number of replicas of pods managed by this autoscaler."
     },
     "desiredReplicas": {
      "type": "integer",
      "format": "int32",
      "description": "desired number of replicas of pods managed by this autoscaler."
     },
     "currentCPUUtilizationPercentage": {
      "type": "integer",
      "format": "int32",
      "description": "current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU."
     }
    }
   },
   "json.WatchEvent": {
    "id": "json.WatchEvent",
    "properties": {
     "type": {
      "type": "string",
      "description": "the type of watch event; may be ADDED, MODIFIED, DELETED, or ERROR"
     },
     "object": {
      "type": "string",
      "description": "the object being watched; will match the type of the resource endpoint or be a Status object if the type is ERROR"
     }
    }
   },
   "unversioned.Patch": {
    "id": "unversioned.Patch",
    "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
    "properties": {}
   },
   "unversioned.Status": {
    "id": "unversioned.Status",
    "description": "Status is a return value for calls that don't return other objects.",
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "unversioned.ListMeta",
      "description": "Standard list metadata. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "status": {
      "type": "string",
      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#spec-and-status"
     },
     "message": {
      "type": "string",
      "description": "A human-readable description of the status of this operation."
     },
     "reason": {
      "type": "string",
      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it."
     },
     "details": {
      "$ref": "unversioned.StatusDetails",
      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type."
     },
     "code": {
      "type": "integer",
      "format": "int32",
      "description": "Suggested HTTP return code for this status, 0 if not set."
     }
    }
   },
   "unversioned.StatusDetails": {
    "id": "unversioned.StatusDetails",
    "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
    "properties": {
     "name": {
      "type": "string",
      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described)."
     },
     "kind": {
      "type": "string",
      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "causes": {
      "type": "array",
      "items": {
       "$ref": "unversioned.StatusCause"
      },
      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes."
     },
     "retryAfterSeconds": {
      "type": "integer",
      "format": "int32",
      "description": "If specified, the time in seconds before the operation should be retried."
     }
    }
   },
   "unversioned.StatusCause": {
    "id": "unversioned.StatusCause",
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "properties": {
     "reason": {
      "type": "string",
      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available."
     },
     "message": {
      "type": "string",
      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader."
     },
     "field": {
      "type": "string",
      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\""
     }
    }
   },
   "v1.DeleteOptions": {
    "id": "v1.DeleteOptions",
    "description": "DeleteOptions may be provided when deleting an API object",
    "required": [
     "gracePeriodSeconds"
    ],
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#resources"
     },
     "gracePeriodSeconds": {
      "type": "integer",
      "format": "int64",
      "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
     }
    }
   },
   "v1beta1.IngressList": {
    "id": "v1beta1.IngressList",
    "description": "IngressList is a collection of Ingress.",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "unversioned.ListMeta",
      "description": "Standard object's metadata. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#metadata"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1beta1.Ingress"
      },
      "description": "Items is the list of Ingress."
     }
    }
   },
   "v1beta1.Ingress": {
    "id": "v1beta1.Ingress",
    "description": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta",
      "description": "Standard object's metadata. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#metadata"
     },
     "spec": {
      "$ref": "v1beta1.IngressSpec",
      "description": "Spec is the desired state of the Ingress. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#spec-and-status"
     },
     "status": {
      "$ref": "v1beta1.IngressStatus",
      "description": "Status is the current state of the Ingress. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#spec-and-status"
     }
    }
   },
   "v1beta1.IngressSpec": {
    "id": "v1beta1.IngressSpec",
    "description": "IngressSpec describes the Ingress the user wishes to exist.",
    "properties": {
     "backend": {
      "$ref": "v1beta1.IngressBackend",
      "description": "A default backend capable of servicing requests that don't match any rule. At least one of 'backend' or 'rules' must be specified. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default."
     },
     "rules": {
      "type": "array",
      "items": {
       "$ref": "v1beta1.IngressRule"
      },
      "description": "A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend."
     }
    }
   },
   "v1beta1.IngressBackend": {
    "id": "v1beta1.IngressBackend",
    "description": "IngressBackend describes all endpoints for a given service and port.",
    "required": [
     "serviceName",
     "servicePort"
    ],
    "properties": {
     "serviceName": {
      "type": "string",
      "description": "Specifies the name of the referenced service."
     },
     "servicePort": {
      "type": "string",
      "description": "Specifies the port of the referenced service."
     }
    }
   },
   "v1beta1.IngressRule": {
    "id": "v1beta1.IngressRule",
    "description": "IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
    "properties": {
     "host": {
      "type": "string",
      "description": "Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the\n\t  IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue."
     },
     "http": {
      "$ref": "v1beta1.HTTPIngressRuleValue"
     }
    }
   },
   "v1beta1.HTTPIngressRuleValue": {
    "id": "v1beta1.HTTPIngressRuleValue",
    "description": "HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://\u003chost\u003e/\u003cpath\u003e?\u003csearchpart\u003e -\u003e backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.",
    "required": [
     "paths"
    ],
    "properties": {
     "paths": {
      "type": "array",
      "items": {
       "$ref": "v1beta1.HTTPIngressPath"
      },
      "description": "A collection of paths that map requests to backends."
     }
    }
   },
   "v1beta1.HTTPIngressPath": {
    "id": "v1beta1.HTTPIngressPath",
    "description": "HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.",
    "required": [
     "backend"
    ],
    "properties": {
     "path": {
      "type": "string",
      "description": "Path is a extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend."
     },
     "backend": {
      "$ref": "v1beta1.IngressBackend",
      "description": "Backend defines the referenced service endpoint to which the traffic will be forwarded to."
     }
    }
   },
   "v1beta1.IngressStatus": {
    "id": "v1beta1.IngressStatus",
    "description": "IngressStatus describe the current state of the Ingress.",
    "properties": {
     "loadBalancer": {
      "$ref": "v1.LoadBalancerStatus",
      "description": "LoadBalancer contains the current status of the load-balancer."
     }
    }
   },
   "v1.LoadBalancerStatus": {
    "id": "v1.LoadBalancerStatus",
    "description": "LoadBalancerStatus represents the status of a load-balancer.",
    "properties": {
     "ingress": {
      "type": "array",
      "items": {
       "$ref": "v1.LoadBalancerIngress"
      },
      "description": "Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points."
     }
    }
   },
   "v1.LoadBalancerIngress": {
    "id": "v1.LoadBalancerIngress",
    "description": "LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.",
    "properties": {
     "ip": {
      "type": "string",
      "description": "IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)"
     },
     "hostname": {
      "type": "string",
      "description": "Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)"
     }
    }
   },
   "v1beta1.JobList": {
    "id": "v1beta1.JobList",
    "description": "JobList is a collection of jobs.",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "unversioned.ListMeta",
      "description": "Standard list metadata More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#metadata"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1beta1.Job"
      },
      "description": "Items is the list of Job."
     }
    }
   },
   "v1beta1.Job": {
    "id": "v1beta1.Job",
    "description": "Job represents the configuration of a single job.",
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta",
      "description": "Standard object's metadata. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#metadata"
     },
     "spec": {
      "$ref": "v1beta1.JobSpec",
      "description": "Spec is a structure defining the expected behavior of a job. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#spec-and-status"
     },
     "status": {
      "$ref": "v1beta1.JobStatus",
      "description": "Status is a structure describing current status of a job. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#spec-and-status"
     }
    }
   },
   "v1beta1.JobSpec": {
    "id": "v1beta1.JobSpec",
    "description": "JobSpec describes how the job execution will look like.",
    "required": [
     "template"
    ],
    "properties": {
     "parallelism": {
      "type": "integer",
      "format": "int32",
      "description": "Parallelism specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) \u003c .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: http://releases.k8s.io/release-1.1/docs/user-guide/jobs.md"
     },
     "completions": {
      "type": "integer",
      "format": "int32",
      "description": "Completions specifies the desired number of successfully finished pods the job should be run with. Defaults to 1. More info: http://releases.k8s.io/release-1.1/docs/user-guide/jobs.md"
     },
     "selector": {
      "$ref": "v1beta1.PodSelector",
      "description": "Selector is a label query over pods that should match the pod count. More info: http://releases.k8s.io/release-1.1/docs/user-guide/labels.md#label-selectors"
     },
     "template": {
      "$ref": "v1.PodTemplateSpec",
      "description": "Template is the object that describes the pod that will be created when executing a job. More info: http://releases.k8s.io/release-1.1/docs/user-guide/jobs.md"
     }
    }
   },
   "v1beta1.PodSelector": {
    "id": "v1beta1.PodSelector",
    "description": "A pod selector is a label query over a set of pods. The result of matchLabels and matchExpressions are ANDed. An empty pod selector matches all objects. A null pod selector matches no objects.",
    "properties": {
     "matchLabels": {
      "type": "any",
      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
     },
     "matchExpressions": {
      "type": "array",
      "items": {
       "$ref": "v1beta1.PodSelectorRequirement"
      },
      "description": "matchExpressions is a list of pod selector requirements. The requirements are ANDed."
     }
    }
   },
   "v1beta1.PodSelectorRequirement": {
    "id": "v1beta1.PodSelectorRequirement",
    "description": "A pod selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "type": "string",
      "description": "key is the label key that the selector applies to."
     },
     "operator": {
      "type": "string",
      "description": "operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist."
     },
     "values": {
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
     }
    }
   },
   "v1.PodTemplateSpec": {
    "id": "v1.PodTemplateSpec",
    "description": "PodTemplateSpec describes the data a pod should have when created from a template",
    "properties": {
     "metadata": {
      "$ref": "v1.ObjectMeta",
      "description": "Standard object's metadata. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#metadata"
     },
     "spec": {
      "$ref": "v1.PodSpec",
      "description": "Specification of the desired behavior of the pod. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#spec-and-status"
     }
    }
   },
   "v1.PodSpec": {
    "id": "v1.PodSpec",
    "description": "PodSpec is a description of a pod.",
    "required": [
     "containers"
    ],
    "properties": {
     "volumes": {
      "type": "array",
      "items": {
       "$ref": "v1.Volume"
      },
      "description": "List of volumes that can be mounted by containers belonging to the pod. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md"
     },
     "containers": {
      "type": "array",
      "items": {
       "$ref": "v1.Container"
      },
      "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://releases.k8s.io/release-1.1/docs/user-guide/containers.md"
     },
     "restartPolicy": {
      "type": "string",
      "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: http://releases.k8s.io/release-1.1/docs/user-guide/pod-states.md#restartpolicy"
     },
     "terminationGracePeriodSeconds": {
      "type": "integer",
      "format": "int64",
      "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds."
     },
     "activeDeadlineSeconds": {
      "type": "integer",
      "format": "int64",
      "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer."
     },
     "dnsPolicy": {
      "type": "string",
      "description": "Set DNS policy for containers within the pod. One of 'ClusterFirst' or 'Default'. Defaults to \"ClusterFirst\"."
     },
     "nodeSelector": {
      "type": "any",
      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://releases.k8s.io/release-1.1/docs/user-guide/node-selection/README.md"
     },
     "serviceAccountName": {
      "type": "string",
      "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/release-1.1/docs/design/service_accounts.md"
     },
     "serviceAccount": {
      "type": "string",
      "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead."
     },
     "nodeName": {
      "type": "string",
      "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements."
     },
     "hostNetwork": {
      "type": "boolean",
      "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false."
     },
     "hostPID": {
      "type": "boolean",
      "description": "Use the host's pid namespace. Optional: Default to false."
     },
     "hostIPC": {
      "type": "boolean",
      "description": "Use the host's ipc namespace. Optional: Default to false."
     },
     "imagePullSecrets": {
      "type": "array",
      "items": {
       "$ref": "v1.LocalObjectReference"
      },
      "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://releases.k8s.io/release-1.1/docs/user-guide/images.md#specifying-imagepullsecrets-on-a-pod"
     }
    }
   },
   "v1.Volume": {
    "id": "v1.Volume",
    "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "type": "string",
      "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://releases.k8s.io/release-1.1/docs/user-guide/identifiers.md#names"
     },
     "hostPath": {
      "$ref": "v1.HostPathVolumeSource",
      "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#hostpath"
     },
     "emptyDir": {
      "$ref": "v1.EmptyDirVolumeSource",
      "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#emptydir"
     },
     "gcePersistentDisk": {
      "$ref": "v1.GCEPersistentDiskVolumeSource",
      "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#gcepersistentdisk"
     },
     "awsElasticBlockStore": {
      "$ref": "v1.AWSElasticBlockStoreVolumeSource",
      "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#awselasticblockstore"
     },
     "gitRepo": {
      "$ref": "v1.GitRepoVolumeSource",
      "description": "GitRepo represents a git repository at a particular revision."
     },
     "secret": {
      "$ref": "v1.SecretVolumeSource",
      "description": "Secret represents a secret that should populate this volume. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#secrets"
     },
     "nfs": {
      "$ref": "v1.NFSVolumeSource",
      "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#nfs"
     },
     "iscsi": {
      "$ref": "v1.ISCSIVolumeSource",
      "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://releases.k8s.io/release-1.1/examples/iscsi/README.md"
     },
     "glusterfs": {
      "$ref": "v1.GlusterfsVolumeSource",
      "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/release-1.1/examples/glusterfs/README.md"
     },
     "persistentVolumeClaim": {
      "$ref": "v1.PersistentVolumeClaimVolumeSource",
      "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: http://releases.k8s.io/release-1.1/docs/user-guide/persistent-volumes.md#persistentvolumeclaims"
     },
     "rbd": {
      "$ref": "v1.RBDVolumeSource",
      "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/release-1.1/examples/rbd/README.md"
     },
     "cinder": {
      "$ref": "v1.CinderVolumeSource",
      "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: http://releases.k8s.io/release-1.1/examples/mysql-cinder-pd/README.md"
     },
     "cephfs": {
      "$ref": "v1.CephFSVolumeSource",
      "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
     },
     "flocker": {
      "$ref": "v1.FlockerVolumeSource",
      "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"
     },
     "downwardAPI": {
      "$ref": "v1.DownwardAPIVolumeSource",
      "description": "DownwardAPI represents downward API about the pod that should populate this volume"
     },
     "fc": {
      "$ref": "v1.FCVolumeSource",
      "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
     }
    }
   },
   "v1.HostPathVolumeSource": {
    "id": "v1.HostPathVolumeSource",
    "description": "HostPathVolumeSource represents bare host directory volume.",
    "required": [
     "path"
    ],
    "properties": {
     "path": {
      "type": "string",
      "description": "Path of the directory on the host. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#hostpath"
     }
    }
   },
   "v1.EmptyDirVolumeSource": {
    "id": "v1.EmptyDirVolumeSource",
    "description": "EmptyDirVolumeSource is temporary directory that shares a pod's lifetime.",
    "properties": {
     "medium": {
      "type": "string",
      "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#emptydir"
     }
    }
   },
   "v1.GCEPersistentDiskVolumeSource": {
    "id": "v1.GCEPersistentDiskVolumeSource",
    "description": "GCEPersistentDiskVolumeSource represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist and be formatted before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once.",
    "required": [
     "pdName",
     "fsType"
    ],
    "properties": {
     "pdName": {
      "type": "string",
      "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#gcepersistentdisk"
     },
     "fsType": {
      "type": "string",
      "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#gcepersistentdisk"
     },
     "partition": {
      "type": "integer",
      "format": "int32",
      "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#gcepersistentdisk"
     },
     "readOnly": {
      "type": "boolean",
      "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#gcepersistentdisk"
     }
    }
   },
   "v1.AWSElasticBlockStoreVolumeSource": {
    "id": "v1.AWSElasticBlockStoreVolumeSource",
    "description": "Represents a persistent disk resource in AWS.\n\nAn Amazon Elastic Block Store (EBS) must already be created, formatted, and reside in the same AWS zone as the kubelet before it can be mounted. Note: Amazon EBS volumes can be mounted to only one instance at a time.",
    "required": [
     "volumeID",
     "fsType"
    ],
    "properties": {
     "volumeID": {
      "type": "string",
      "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#awselasticblockstore"
     },
     "fsType": {
      "type": "string",
      "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#awselasticblockstore"
     },
     "partition": {
      "type": "integer",
      "format": "int32",
      "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
     },
     "readOnly": {
      "type": "boolean",
      "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#awselasticblockstore"
     }
    }
   },
   "v1.GitRepoVolumeSource": {
    "id": "v1.GitRepoVolumeSource",
    "description": "GitRepoVolumeSource represents a volume that is pulled from git when the pod is created.",
    "required": [
     "repository",
     "revision"
    ],
    "properties": {
     "repository": {
      "type": "string",
      "description": "Repository URL"
     },
     "revision": {
      "type": "string",
      "description": "Commit hash for the specified revision."
     }
    }
   },
   "v1.SecretVolumeSource": {
    "id": "v1.SecretVolumeSource",
    "description": "SecretVolumeSource adapts a Secret into a VolumeSource. More info: http://releases.k8s.io/release-1.1/docs/design/secrets.md",
    "required": [
     "secretName"
    ],
    "properties": {
     "secretName": {
      "type": "string",
      "description": "SecretName is the name of a secret in the pod's namespace. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#secrets"
     }
    }
   },
   "v1.NFSVolumeSource": {
    "id": "v1.NFSVolumeSource",
    "description": "NFSVolumeSource represents an NFS mount that lasts the lifetime of a pod",
    "required": [
     "server",
     "path"
    ],
    "properties": {
     "server": {
      "type": "string",
      "description": "Server is the hostname or IP address of the NFS server. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#nfs"
     },
     "path": {
      "type": "string",
      "description": "Path that is exported by the NFS server. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#nfs"
     },
     "readOnly": {
      "type": "boolean",
      "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#nfs"
     }
    }
   },
   "v1.ISCSIVolumeSource": {
    "id": "v1.ISCSIVolumeSource",
    "description": "ISCSIVolumeSource describes an ISCSI Disk can only be mounted as read/write once.",
    "required": [
     "targetPortal",
     "iqn",
     "lun",
     "fsType"
    ],
    "properties": {
     "targetPortal": {
      "type": "string",
      "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
     },
     "iqn": {
      "type": "string",
      "description": "Target iSCSI Qualified Name."
     },
     "lun": {
      "type": "integer",
      "format": "int32",
      "description": "iSCSI target lun number."
     },
     "fsType": {
      "type": "string",
      "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#iscsi"
     },
     "readOnly": {
      "type": "boolean",
      "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false."
     }
    }
   },
   "v1.GlusterfsVolumeSource": {
    "id": "v1.GlusterfsVolumeSource",
    "description": "GlusterfsVolumeSource represents a Glusterfs Mount that lasts the lifetime of a pod.",
    "required": [
     "endpoints",
     "path"
    ],
    "properties": {
     "endpoints": {
      "type": "string",
      "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/release-1.1/examples/glusterfs/README.md#create-a-pod"
     },
     "path": {
      "type": "string",
      "description": "Path is the Glusterfs volume path. More info: http://releases.k8s.io/release-1.1/examples/glusterfs/README.md#create-a-pod"
     },
     "readOnly": {
      "type": "boolean",
      "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/release-1.1/examples/glusterfs/README.md#create-a-pod"
     }
    }
   },
   "v1.PersistentVolumeClaimVolumeSource": {
    "id": "v1.PersistentVolumeClaimVolumeSource",
    "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
    "required": [
     "claimName"
    ],
    "properties": {
     "claimName": {
      "type": "string",
      "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: http://releases.k8s.io/release-1.1/docs/user-guide/persistent-volumes.md#persistentvolumeclaims"
     },
     "readOnly": {
      "type": "boolean",
      "description": "Will force the ReadOnly setting in VolumeMounts. Default false."
     }
    }
   },
   "v1.RBDVolumeSource": {
    "id": "v1.RBDVolumeSource",
    "description": "RBDVolumeSource represents a Rados Block Device Mount that lasts the lifetime of a pod",
    "required": [
     "monitors",
     "image",
     "pool",
     "user",
     "keyring",
     "secretRef"
    ],
    "properties": {
     "monitors": {
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/release-1.1/examples/rbd/README.md#how-to-use-it"
     },
     "image": {
      "type": "string",
      "description": "The rados image name. More info: http://releases.k8s.io/release-1.1/examples/rbd/README.md#how-to-use-it"
     },
     "fsType": {
      "type": "string",
      "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". More info: http://releases.k8s.io/release-1.1/docs/user-guide/volumes.md#rbd"
     },
     "pool": {
      "type": "string",
      "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/release-1.1/examples/rbd/README.md#how-to-use-it."
     },
     "user": {
      "type": "string",
      "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/release-1.1/examples/rbd/README.md#how-to-use-it"
     },
     "keyring": {
      "type": "string",
      "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/release-1.1/examples/rbd/README.md#how-to-use-it"
     },
     "secretRef": {
      "$ref": "v1.LocalObjectReference",
      "description": "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is empty. More info: http://releases.k8s.io/release-1.1/examples/rbd/README.md#how-to-use-it"
     },
     "readOnly": {
      "type": "boolean",
      "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/release-1.1/examples/rbd/README.md#how-to-use-it"
     }
    }
   },
   "v1.LocalObjectReference": {
    "id": "v1.LocalObjectReference",
    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
    "properties": {
     "name": {
      "type": "string",
      "description": "Name of the referent. More info: http://releases.k8s.io/release-1.1/docs/user-guide/identifiers.md#names"
     }
    }
   },
   "v1.CinderVolumeSource": {
    "id": "v1.CinderVolumeSource",
    "description": "CinderVolumeSource represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet.",
    "required": [
     "volumeID"
    ],
    "properties": {
     "volumeID": {
      "type": "string",
      "description": "volume id used to identify the volume in cinder More info: http://releases.k8s.io/release-1.1/examples/mysql-cinder-pd/README.md"
     },
     "fsType": {
      "type": "string",
      "description": "Required: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Only ext3 and ext4 are allowed More info: http://releases.k8s.io/release-1.1/examples/mysql-cinder-pd/README.md"
     },
     "readOnly": {
      "type": "boolean",
      "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: http://releases.k8s.io/release-1.1/examples/mysql-cinder-pd/README.md"
     }
    }
   },
   "v1.CephFSVolumeSource": {
    "id": "v1.CephFSVolumeSource",
    "description": "CephFSVolumeSource represents a Ceph Filesystem Mount that lasts the lifetime of a pod",
    "required": [
     "monitors"
    ],
    "properties": {
     "monitors": {
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Required: Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/release-1.1/examples/cephfs/README.md#how-to-use-it"
     },
     "user": {
      "type": "string",
      "description": "Optional: User is the rados user name, default is admin More info: http://releases.k8s.io/release-1.1/examples/cephfs/README.md#how-to-use-it"
     },
     "secretFile": {
      "type": "string",
      "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/release-1.1/examples/cephfs/README.md#how-to-use-it"
     },
     "secretRef": {
      "$ref": "v1.LocalObjectReference",
      "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/release-1.1/examples/cephfs/README.md#how-to-use-it"
     },
     "readOnly": {
      "type": "boolean",
      "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: http://releases.k8s.io/release-1.1/examples/cephfs/README.md#how-to-use-it"
     }
    }
   },
   "v1.FlockerVolumeSource": {
    "id": "v1.FlockerVolumeSource",
    "description": "FlockerVolumeSource represents a Flocker volume mounted by the Flocker agent.",
    "required": [
     "datasetName"
    ],
    "properties": {
     "datasetName": {
      "type": "string",
      "description": "Required: the volume name. This is going to be store on metadata -\u003e name on the payload for Flocker"
     }
    }
   },
   "v1.DownwardAPIVolumeSource": {
    "id": "v1.DownwardAPIVolumeSource",
    "description": "DownwardAPIVolumeSource represents a volume containing downward API info",
    "properties": {
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.DownwardAPIVolumeFile"
      },
      "description": "Items is a list of downward API volume file"
     }
    }
   },
   "v1.DownwardAPIVolumeFile": {
    "id": "v1.DownwardAPIVolumeFile",
    "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
    "required": [
     "path",
     "fieldRef"
    ],
    "properties": {
     "path": {
      "type": "string",
      "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
     },
     "fieldRef": {
      "$ref": "v1.ObjectFieldSelector",
      "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
     }
    }
   },
   "v1.ObjectFieldSelector": {
    "id": "v1.ObjectFieldSelector",
    "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
    "required": [
     "fieldPath"
    ],
    "properties": {
     "apiVersion": {
      "type": "string",
      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
     },
     "fieldPath": {
      "type": "string",
      "description": "Path of the field to select in the specified API version."
     }
    }
   },
   "v1.FCVolumeSource": {
    "id": "v1.FCVolumeSource",
    "description": "A Fibre Channel Disk can only be mounted as read/write once.",
    "required": [
     "targetWWNs",
     "lun",
     "fsType"
    ],
    "properties": {
     "targetWWNs": {
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Required: FC target world wide names (WWNs)"
     },
     "lun": {
      "type": "integer",
      "format": "int32",
      "description": "Required: FC target lun number"
     },
     "fsType": {
      "type": "string",
      "description": "Required: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\""
     },
     "readOnly": {
      "type": "boolean",
      "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
     }
    }
   },
   "v1.Container": {
    "id": "v1.Container",
    "description": "A single application container that you want to run within a pod.",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "type": "string",
      "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
     },
     "image": {
      "type": "string",
      "description": "Docker image name. More info: http://releases.k8s.io/release-1.1/docs/user-guide/images.md"
     },
     "command": {
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Entrypoint array. Not executed within a shell. The docker image's entrypoint is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://releases.k8s.io/release-1.1/docs/user-guide/containers.md#containers-and-commands"
     },
     "args": {
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Arguments to the entrypoint. The docker image's cmd is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://releases.k8s.io/release-1.1/docs/user-guide/containers.md#containers-and-commands"
     },
     "workingDir": {
      "type": "string",
      "description": "Container's working directory. Defaults to Docker's default. D efaults to image's default. Cannot be updated."
     },
     "ports": {
      "type": "array",
      "items": {
       "$ref": "v1.ContainerPort"
      },
      "description": "List of ports to expose from the container. Cannot be updated."
     },
     "env": {
      "type": "array",
      "items": {
       "$ref": "v1.EnvVar"
      },
      "description": "List of environment variables to set in the container. Cannot be updated."
     },
     "resources": {
      "$ref": "v1.ResourceRequirements",
      "description": "Compute Resources required by this container. Cannot be updated. More info: http://releases.k8s.io/release-1.1/docs/user-guide/persistent-volumes.md#resources"
     },
     "volumeMounts": {
      "type": "array",
      "items": {
       "$ref": "v1.VolumeMount"
      },
      "description": "Pod volumes to mount into the container's filesyste. Cannot be updated."
     },
     "livenessProbe": {
      "$ref": "v1.Probe",
      "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://releases.k8s.io/release-1.1/docs/user-guide/pod-states.md#container-probes"
     },
     "readinessProbe": {
      "$ref": "v1.Probe",
      "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://releases.k8s.io/release-1.1/docs/user-guide/pod-states.md#container-probes"
     },
     "lifecycle": {
      "$ref": "v1.Lifecycle",
      "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated."
     },
     "terminationMessagePath": {
      "type": "string",
      "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated."
     },
     "imagePullPolicy": {
      "type": "string",
      "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://releases.k8s.io/release-1.1/docs/user-guide/images.md#updating-images"
     },
     "securityContext": {
      "$ref": "v1.SecurityContext",
      "description": "Security options the pod should run with. More info: http://releases.k8s.io/release-1.1/docs/design/security_context.md"
     },
     "stdin": {
      "type": "boolean",
      "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false."
     },
     "stdinOnce": {
      "type": "boolean",
      "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false"
     },
     "tty": {
      "type": "boolean",
      "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."
     }
    }
   },
   "v1.ContainerPort": {
    "id": "v1.ContainerPort",
    "description": "ContainerPort represents a network port in a single container.",
    "required": [
     "containerPort"
    ],
    "properties": {
     "name": {
      "type": "string",
      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services."
     },
     "hostPort": {
      "type": "integer",
      "format": "int32",
      "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
     },
     "containerPort": {
      "type": "integer",
      "format": "int32",
      "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
     },
     "protocol": {
      "type": "string",
      "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\"."
     },
     "hostIP": {
      "type": "string",
      "description": "What host IP to bind the external port to."
     }
    }
   },
   "v1.EnvVar": {
    "id": "v1.EnvVar",
    "description": "EnvVar represents an environment variable present in a Container.",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "type": "string",
      "description": "Name of the environment variable. Must be a C_IDENTIFIER."
     },
     "value": {
      "type": "string",
      "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
     },
     "valueFrom": {
      "$ref": "v1.EnvVarSource",
      "description": "Source for the environment variable's value. Cannot be used if value is not empty."
     }
    }
   },
   "v1.EnvVarSource": {
    "id": "v1.EnvVarSource",
    "description": "EnvVarSource represents a source for the value of an EnvVar.",
    "required": [
     "fieldRef"
    ],
    "properties": {
     "fieldRef": {
      "$ref": "v1.ObjectFieldSelector",
      "description": "Selects a field of the pod. Only name and namespace are supported."
     }
    }
   },
   "v1.ResourceRequirements": {
    "id": "v1.ResourceRequirements",
    "description": "ResourceRequirements describes the compute resource requirements.",
    "properties": {
     "limits": {
      "type": "any",
      "description": "Limits describes the maximum amount of compute resources allowed. More info: http://releases.k8s.io/release-1.1/docs/design/resources.md#resource-specifications"
     },
     "requests": {
      "type": "any",
      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: http://releases.k8s.io/release-1.1/docs/design/resources.md#resource-specifications"
     }
    }
   },
   "v1.VolumeMount": {
    "id": "v1.VolumeMount",
    "description": "VolumeMount describes a mounting of a Volume within a container.",
    "required": [
     "name",
     "mountPath"
    ],
    "properties": {
     "name": {
      "type": "string",
      "description": "This must match the Name of a Volume."
     },
     "readOnly": {
      "type": "boolean",
      "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false."
     },
     "mountPath": {
      "type": "string",
      "description": "Path within the container at which the volume should be mounted."
     }
    }
   },
   "v1.Probe": {
    "id": "v1.Probe",
    "description": "Probe describes a liveness probe to be examined to the container.",
    "properties": {
     "exec": {
      "$ref": "v1.ExecAction",
      "description": "One and only one of the following should be specified. Exec specifies the action to take."
     },
     "httpGet": {
      "$ref": "v1.HTTPGetAction",
      "description": "HTTPGet specifies the http request to perform."
     },
     "tcpSocket": {
      "$ref": "v1.TCPSocketAction",
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
     },
     "initialDelaySeconds": {
      "type": "integer",
      "format": "int64",
      "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://releases.k8s.io/release-1.1/docs/user-guide/pod-states.md#container-probes"
     },
     "timeoutSeconds": {
      "type": "integer",
      "format": "int64",
      "description": "Number of seconds after which liveness probes timeout. Defaults to 1 second. More info: http://releases.k8s.io/release-1.1/docs/user-guide/pod-states.md#container-probes"
     }
    }
   },
   "v1.ExecAction": {
    "id": "v1.ExecAction",
    "description": "ExecAction describes a \"run in container\" action.",
    "properties": {
     "command": {
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
     }
    }
   },
   "v1.HTTPGetAction": {
    "id": "v1.HTTPGetAction",
    "description": "HTTPGetAction describes an action based on HTTP Get requests.",
    "required": [
     "port"
    ],
    "properties": {
     "path": {
      "type": "string",
      "description": "Path to access on the HTTP server."
     },
     "port": {
      "type": "string",
      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
     },
     "host": {
      "type": "string",
      "description": "Host name to connect to, defaults to the pod IP."
     },
     "scheme": {
      "type": "string",
      "description": "Scheme to use for connecting to the host. Defaults to HTTP."
     }
    }
   },
   "v1.TCPSocketAction": {
    "id": "v1.TCPSocketAction",
    "description": "TCPSocketAction describes an action based on opening a socket",
    "required": [
     "port"
    ],
    "properties": {
     "port": {
      "type": "string",
      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
     }
    }
   },
   "v1.Lifecycle": {
    "id": "v1.Lifecycle",
    "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
    "properties": {
     "postStart": {
      "$ref": "v1.Handler",
      "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://releases.k8s.io/release-1.1/docs/user-guide/container-environment.md#hook-details"
     },
     "preStop": {
      "$ref": "v1.Handler",
      "description": "PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://releases.k8s.io/release-1.1/docs/user-guide/container-environment.md#hook-details"
     }
    }
   },
   "v1.Handler": {
    "id": "v1.Handler",
    "description": "Handler defines a specific action that should be taken",
    "properties": {
     "exec": {
      "$ref": "v1.ExecAction",
      "description": "One and only one of the following should be specified. Exec specifies the action to take."
     },
     "httpGet": {
      "$ref": "v1.HTTPGetAction",
      "description": "HTTPGet specifies the http request to perform."
     },
     "tcpSocket": {
      "$ref": "v1.TCPSocketAction",
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
     }
    }
   },
   "v1.SecurityContext": {
    "id": "v1.SecurityContext",
    "description": "SecurityContext holds security configuration that will be applied to a container.",
    "properties": {
     "capabilities": {
      "$ref": "v1.Capabilities",
      "description": "The linux kernel capabilites that should be added or removed. Default to Container.Capabilities if left unset. More info: http://releases.k8s.io/release-1.1/docs/design/security_context.md#security-context"
     },
     "privileged": {
      "type": "boolean",
      "description": "Run the container in privileged mode. Default to Container.Privileged if left unset. More info: http://releases.k8s.io/release-1.1/docs/design/security_context.md#security-context"
     },
     "seLinuxOptions": {
      "$ref": "v1.SELinuxOptions",
      "description": "SELinuxOptions are the labels to be applied to the container and volumes. Options that control the SELinux labels applied. More info: http://releases.k8s.io/release-1.1/docs/design/security_context.md#security-context"
     },
     "runAsUser": {
      "type": "integer",
      "format": "int64",
      "description": "RunAsUser is the UID to run the entrypoint of the container process. The user id that runs the first process in the container. More info: http://releases.k8s.io/release-1.1/docs/design/security_context.md#security-context"
     },
     "runAsNonRoot": {
      "type": "boolean",
      "description": "RunAsNonRoot indicates that the container should be run as a non-root user. If the RunAsUser field is not explicitly set then the kubelet may check the image for a specified user or perform defaulting to specify a user."
     }
    }
   },
   "v1.Capabilities": {
    "id": "v1.Capabilities",
    "description": "Adds and removes POSIX capabilities from running containers.",
    "properties": {
     "add": {
      "type": "array",
      "items": {
       "$ref": "v1.Capability"
      },
      "description": "Added capabilities"
     },
     "drop": {
      "type": "array",
      "items": {
       "$ref": "v1.Capability"
      },
      "description": "Removed capabilities"
     }
    }
   },
   "v1.Capability": {
    "id": "v1.Capability",
    "properties": {}
   },
   "v1.SELinuxOptions": {
    "id": "v1.SELinuxOptions",
    "description": "SELinuxOptions are the labels to be applied to the container",
    "properties": {
     "user": {
      "type": "string",
      "description": "User is a SELinux user label that applies to the container. More info: http://releases.k8s.io/release-1.1/docs/user-guide/labels.md"
     },
     "role": {
      "type": "string",
      "description": "Role is a SELinux role label that applies to the container. More info: http://releases.k8s.io/release-1.1/docs/user-guide/labels.md"
     },
     "type": {
      "type": "string",
      "description": "Type is a SELinux type label that applies to the container. More info: http://releases.k8s.io/release-1.1/docs/user-guide/labels.md"
     },
     "level": {
      "type": "string",
      "description": "Level is SELinux level label that applies to the container. More info: http://releases.k8s.io/release-1.1/docs/user-guide/labels.md"
     }
    }
   },
   "v1beta1.JobStatus": {
    "id": "v1beta1.JobStatus",
    "description": "JobStatus represents the current state of a Job.",
    "properties": {
     "conditions": {
      "type": "array",
      "items": {
       "$ref": "v1beta1.JobCondition"
      },
      "description": "Conditions represent the latest available observations of an object's current state. More info: http://releases.k8s.io/release-1.1/docs/user-guide/jobs.md"
     },
     "startTime": {
      "type": "string",
      "description": "StartTime represents time when the job was acknowledged by the Job Manager. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC."
     },
     "completionTime": {
      "type": "string",
      "description": "CompletionTime represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC."
     },
     "active": {
      "type": "integer",
      "format": "int32",
      "description": "Active is the number of actively running pods."
     },
     "succeeded": {
      "type": "integer",
      "format": "int32",
      "description": "Succeeded is the number of pods which reached Phase Succeeded."
     },
     "failed": {
      "type": "integer",
      "format": "int32",
      "description": "Failed is the number of pods which reached Phase Failed."
     }
    }
   },
   "v1beta1.JobCondition": {
    "id": "v1beta1.JobCondition",
    "description": "JobCondition describes current state of a job.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "type": {
      "type": "string",
      "description": "Type of job condition, currently only Complete."
     },
     "status": {
      "type": "string",
      "description": "Status of the condition, one of True, False, Unknown."
     },
     "lastProbeTime": {
      "type": "string",
      "description": "Last time the condition was checked."
     },
     "lastTransitionTime": {
      "type": "string",
      "description": "Last time the condition transit from one status to another."
     },
     "reason": {
      "type": "string",
      "description": "(brief) reason for the condition's last transition."
     },
     "message": {
      "type": "string",
      "description": "Human readable message indicating details about last transition."
     }
    }
   },
   "v1beta1.Scale": {
    "id": "v1beta1.Scale",
    "description": "represents a scaling request for a resource.",
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta",
      "description": "Standard object metadata; More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#metadata."
     },
     "spec": {
      "$ref": "v1beta1.ScaleSpec",
      "description": "defines the behavior of the scale. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#spec-and-status."
     },
     "status": {
      "$ref": "v1beta1.ScaleStatus",
      "description": "current status of the scale. More info: http://releases.k8s.io/release-1.1/docs/devel/api-conventions.md#spec-and-status. Read-only."
     }
    }
   },
   "v1beta1.ScaleSpec": {
    "id": "v1beta1.ScaleSpec",
    "description": "describes the attributes of a scale subresource",
    "properties": {
     "replicas": {
      "type": "integer",
      "format": "int32",
      "description": "desired number of instances for the scaled object."
     }
    }
   },
   "v1beta1.ScaleStatus": {
    "id": "v1beta1.ScaleStatus",
    "description": "represents the current status of a scale subresource.",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "type": "integer",
      "format": "int32",
      "description": "actual number of observed instances of the scaled object."
     },
     "selector": {
      "type": "any",
      "description": "label query over pods that should match the replicas count. More info: http://releases.k8s.io/release-1.1/docs/user-guide/labels.md#label-selectors"
     }
    }
   }
  }
 }