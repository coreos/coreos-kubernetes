{
  "apiVersion": "v1",
  "data": {
    "prometheus.yml": "# A scrape configuration for running Prometheus on a Kubernetes cluster.\n# This uses separate scrape configs for cluster components (i.e. API server, node)\n# and services to allow each to use different authentication configs.\n#\n# Kubernetes labels will be added as Prometheus labels on metrics via the\n# `labelmap` relabeling action.\n\n# Scrape config for cluster components.\nscrape_configs:\n# - job_name: 'kubernetes-nodes'\n#   dns_sd_configs:\n#   - names:\n#     - '_scrape._tcp.prometheus-node-exporter.default.svc.cluster.local'\n\n- job_name: 'kubernetes-cluster'\n\n  # This TLS & bearer token file config is used to connect to the actual scrape\n  # endpoints for cluster components. This is separate to discovery auth\n  # configuration (`in_cluster` below) because discovery & scraping are two\n  # separate concerns in Prometheus.\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  kubernetes_sd_configs:\n  - api_servers:\n    - 'https://kubernetes.default.svc'\n    in_cluster: true\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_role]\n    action: keep\n    regex: (?:apiserver|node)\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - source_labels: [__meta_kubernetes_role]\n    action: replace\n    target_label: kubernetes_role\n\n  metric_relabel_configs:\n  - source_labels: [kubernetes_pod_name]\n    regex: '^(.*)-[a-z0-9]+'\n    replacement: '$1'\n    target_label: kubernetes_controller\n\n# Scrape config for service endpoints.\n#\n# The relabeling allows the actual service scrape endpoint to be configured\n# via the following annotations:\n#\n# * `prometheus.io/scrape`: Only scrape services that have a value of `true`\n# * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need\n# to set this to `https` & most likely set the `tls_config` of the scrape config.\n# * `prometheus.io/path`: If the metrics path is not `/metrics` override this.\n# * `prometheus.io/port`: If the metrics are exposed on a different port to the\n# service then set this appropriately.\n- job_name: 'kubernetes-service-endpoints'\n\n  kubernetes_sd_configs:\n  - api_servers:\n    - 'https://kubernetes.default.svc'\n    in_cluster: true\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_role, __meta_kubernetes_service_annotation_prometheus_io_scrape]\n    action: keep\n    regex: endpoint;true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n    action: replace\n    target_label: __address__\n    regex: (.+)(?::\\d+);(\\d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_role]\n    action: replace\n    target_label: kubernetes_role\n  - source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action: replace\n    target_label: kubernetes_name\n\n# Example scrape config for probing services via the Blackbox Exporter.\n#\n# The relabeling allows the actual service scrape endpoint to be configured\n# via the following annotations:\n#\n# * `prometheus.io/probe`: Only probe services that have a value of `true`\n- job_name: 'kubernetes-services'\n\n  metrics_path: /probe\n  params:\n    module: [http_2xx]\n\n  kubernetes_sd_configs:\n  - api_servers:\n    - 'https://kubernetes.default.svc'\n    in_cluster: true\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_role, __meta_kubernetes_service_annotation_prometheus_io_probe]\n    action: keep\n    regex: service;true\n  - source_labels: [__address__]\n    target_label: __param_target\n  - target_label: __address__\n    replacement: blackbox\n  - source_labels: [__param_target]\n    target_label: instance\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_role]\n    target_label: kubernetes_role\n  - source_labels: [__meta_kubernetes_service_namespace]\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    target_label: kubernetes_name\n"
  },
  "kind": "ConfigMap",
  "metadata": {
    "name": "prometheus-config"
  }
}
