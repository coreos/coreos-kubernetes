.\" Process this file with
.\" nroff -man -Tascii docker.1
.\"
.TH "DOCKER" "1" "APRIL 2014" "0.1" "Docker"
.SH NAME
docker \- Docker image and container command line interface
.SH SYNOPSIS
.B docker [OPTIONS] [COMMAND] [arg...]
.SH DESCRIPTION
\fBdocker\fR has two distinct functions. It is used for starting the Docker daemon and to run the CLI (i.e., to command the daemon to manage images, containers etc.) So \fBdocker\fR is both a server as deamon and a client to the daemon through the CLI.
.sp
To run the Docker deamon you do not specify any of the commands listed below but must specify the \fB-d\fR option.  The other options listed below are for the daemon only.
.sp
The Docker CLI has over 30 commands. The commands are listed below and each has its own man page which explain usage and arguements. 
.sp
To see the man page for a command run \fBman docker <command>\fR.
.SH "OPTIONS"
.B \-D=false: 
Enable debug mode
.TP
.B\-H=[unix:///var/run/docker.sock]: tcp://[host[:port]] to bind or unix://[/path/to/socket] to use. 
When host=[0.0.0.0], port=[4243] or path
=[/var/run/docker.sock] is omitted, default values are used.
.TP
.B \-\-api-enable-cors=false
Enable CORS headers in the remote API
.TP
.B \-b=""
Attach containers to a pre\-existing network bridge; use 'none' to disable container networking
.TP
.B \-\-bip=""
Use the provided CIDR notation address for the dynamically created bridge (docker0); Mutually exclusive of \-b
.TP
.B \-d=false
Enable daemon mode
.TP
.B \-\-dns=""
Force Docker to use specific DNS servers
.TP
.B \-g="/var/lib/docker"
Path to use as the root of the Docker runtime
.TP
.B \-\-icc=true
Enable inter\-container communication
.TP
.B \-\-ip="0.0.0.0"
Default IP address to use when binding container ports
.TP
.B \-\-iptables=true
Disable Docker's addition of iptables rules
.TP
.B \-\-mtu=1500
Set the containers network mtu
.TP
.B \-p="/var/run/docker.pid"
Path to use for daemon PID file
.TP
.B \-r=true
Restart previously running containers
.TP
.B \-s=""
Force the Docker runtime to use a specific storage driver
.TP
.B \-v=false
Print version information and quit
.SH "COMMANDS"
.TP
.B attach 
Attach to a running container
.TP
.B build 
Build a container from a Dockerfile
.TP
.B commit 
Create a new image from a container's changes
.TP
.B cp 
Copy files/folders from the containers filesystem to the host at path
.TP
.B diff 
Inspect changes on a container's filesystem
    
.TP
.B events
Get real time events from the server
.TP
.B export 
Stream the contents of a container as a tar archive
.TP
.B history
Show the history of an image
.TP
.B images
List images
.TP
.B import 
Create a new filesystem image from the contents of a tarball
.TP
.B info 
Display system-wide information
.TP
.B insert 
Insert a file in an image
.TP
.B inspect  
Return low-level information on a container
.TP
.B kill 
Kill a running container (which includes the wrapper process and everything inside it) 
.TP
.B load 
Load an image from a tar archive
.TP
.B login 
Register or Login to a Docker registry server
.TP
.B logs 
Fetch the logs of a container
.TP
.B port 
Lookup the public-facing port which is NAT-ed to PRIVATE_PORT
.TP
.B ps 
List containers
.TP
.B pull 
Pull an image or a repository from a Docker registry server
.TP
.B push 
Push an image or a repository to a Docker registry server
.TP
.B restart 
Restart a running container
.TP
.B rm 
Remove one or more containers
.TP
.B rmi 
Remove one or more images
.TP
.B run 
Run a command in a new container
.TP
.B save 
Save an image to a tar archive
.TP
.B search 
Search for an image in the Docker index
.TP
.B start 
Start a stopped container
.TP
.B stop 
Stop a running container
.TP
.B tag 
Tag an image into a repository
.TP
.B top 
Lookup the running processes of a container
.TP
.B version
Show the Docker version information
.TP
.B wait 
Block until a container stops, then print its exit code
.SH EXAMPLES
.sp
For specific examples please see the man page for the specific Docker command.
.sp
.SH HISTORY
April 2014, Originally compiled by William Henry (whenry at redhat dot com) based on dockier.io source material and internal work.
